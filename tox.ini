[tox]
#envlist = py38, docs, linting, report
envlist = py38, report
isolated_build = True

[pytest]
# this runs the tests in multiple processes but unfortunately prevents logs in
# tests from being displayed
# https://github.com/pytest-dev/pytest-xdist/issues/402
# one does not always benefit from the parallelization of all tests. Uncomment
# the following line if you want to enable multiprocess-parallelization
;addopts = -n auto --dist=loadfile

[testenv]
# pytest-cov has an issue when the tests are inside an sdist, as created by tox
# by default despite tests being run, coverage discovers no data, leading to:
# Coverage.py warning: No data was collected
# this issue is resolved by running pytest-cov within tox development mode, thus
# not creating an sdist
usedevelop = true
commands =
    coverage erase
    pytest --durations=10 --color=true --cov --cov-append --cov-report=term-missing tests {posargs}
deps =
    pytest
    pytest-cov
    pytest-xdist
    pytest-lazy-fixture
    pytest-timeout
    pytest-docker==0.12.0
    pytest-benchmark
    jupyter==1.0.0
    nbconvert==6.4.5
    -r requirements.txt

[testenv:test-notebooks]
description = Tests notebooks
commands =
    pytest notebooks

[testenv:linting]
skip_install = true
setenv =
    PYLINTHOME = .pylint.d
commands =
    black --check .
    isort . --check --diff
    bash -c \'python build_scripts/run_pylint.py >>>(pylint-json2html -f jsonextended -o pylint.html) \'
deps =
    pylint
    anybadge
    pylint-json2html
    black
    isort
whitelist_externals =
    bash

[testenv:docs]
; NOTE: we don't use pytest for running the doctest, even though with pytest no
; imports have to be written in them. The reason is that we want to be running
; doctest during the docs build (which might happen on a remote machine, like
; read_the_docs does) with possibly fewer external dependencies and use sphinx'
; ability to automock the missing ones.
commands =
    python build_scripts/update_docs.py
    sphinx-build -W -b html -d "{envtmpdir}/doctrees" docs "docs/_build/html"
    sphinx-build -b doctest -d "{envtmpdir}/doctrees" docs "docs/_build/doctest"
deps =
    sphinx==5.0.0
    sphinxcontrib-websupport==1.2.4
    sphinx_rtd_theme
    nbsphinx
    ipython

[testenv:report]
skip_install = true
commands =
    coverage html
    coverage-badge -o badges/coverage.svg -f
    coverage erase
deps =
    coverage
    coverage-badge
