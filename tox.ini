[tox]
envlist = base, report, docs
wheel = true

[testenv]
deps =
    -r requirements-dev.txt
    -r requirements.txt
setenv =
    COVERAGE_FILE = {env:COVERAGE_FILE:{toxinidir}/.coverage.{envname}}

[testenv:base]
description = Tests base modules
commands =
    pytest --cov "{envsitepackagesdir}/pydvl" -m "not torch" {posargs}

[testenv:torch]
description = Tests modules that rely on pytorch
commands =
    pytest --cov "{envsitepackagesdir}/pydvl" -m torch {posargs}
extras =
    influence

[testenv:notebooks]
description = Tests notebooks
setenv =
    PYTHONPATH={toxinidir}/notebooks
commands =
    pytest notebooks/ --cov "{envsitepackagesdir}/pydvl"
deps =
    {[testenv]deps}
    jupyter==1.0.0
    nbconvert
    datasets==2.6.1
    torchvision==0.14.1
extras =
    influence
passenv =
    CI

[testenv:report]
setenv =
skip_install = true
commands =
    coverage combine --debug=trace
    coverage html
    coverage-badge -o badges/coverage.svg -f
    coverage erase
deps =
    coverage[toml]
    coverage-badge

[testenv:linting]
skip_install = true
setenv =
    PYLINTHOME = .pylint.d
commands =
    pre-commit run --all --show-diff-on-failure
    bash -c \'python build_scripts/run_pylint.py >>>(pylint-json2html -f jsonextended -o pylint.html) \'
deps =
    pylint == 2.12.0
    anybadge
    pylint-json2html
    pre-commit
    -r requirements.txt
extras:
    torch
whitelist_externals =
    bash

[testenv:type-checking]
basepython = python3.8
skip_install = true
setenv =
    MYPY_FORCE_COLOR=1
passenv =
    TERM
deps =
    mypy == 0.982
    types-tqdm
    pandas-stubs
    -r requirements.txt
commands =
    mypy {posargs:src/}
